@misc{glibc-malloc-is-weak,
	title = {{G}{N}{U} {C} Library source - weak definitions of memory management functions},
	howpublished = {\url{https://code.woboq.org/userspace/glibc/malloc/malloc.c.html#__calloc}},
	note = {Accessed 2019-06-29}
}

@misc{glibc-dlsym-calls-calloc,
	title = {{G}{N}{U} {C} Library source - dlsym() calls calloc()},
	howpublished = {\url{https://github.com/lattera/glibc/blob/59ba27a63ada3f46b71ec99a314dfac5a38ad6d2/dlfcn/dlerror.c#L141}},
	note = {Accessed 2019-06-29}
}

@misc{dlsym-calloc-special-ex1,
	title = {The Universal Elite Game Trainer for CLI (Linux game trainer research project) - hooking memory allocation functions},
	howpublished = {\url{https://github.com/ugtrain/ugtrain/blob/d9519a15f4363cee48bb3c270f6050181c5aa305/src/linuxhooking/memhooks.c#L153}},
	note = {Accessed 2019-06-29}
}

@misc{netbsd-queue-ref,
	title = {Net{B}{S}{D} queue.h header file - reference},
	howpublished = {\url{https://netbsd.gw.com/cgi-bin/man-cgi?queue}},
	note = {Accessed 2019-06-30}
}

@misc{glibc-printf-malloc,
	title = {{G}{N}{U} {C} Library - printf() can use malloc()},
	howpublished = {\url{https://www.gnu.org/software/libc/manual/html_node/Hooks-for-Malloc.html#Hooks-for-Malloc}},
	note = {Accessed 2019-07-08}
}

@misc{glibc-printf-malloc-vulnerability,
	title = {0CTF 2017 - EasiestPrintf (PWN 150)},
	howpublished = {\url{https://blog.dragonsector.pl/2017/03/0ctf-2017-easiestprintf-pwn-150.html}},
	note = {Accessed 2019-07-09}
}

@misc{glibc-puts-analysis,
	title = {Hello World Analysis},
	howpublished = {\url{http://osteras.info/personal/2013/10/11/hello-world-analysis.html}},
	note = {Accessed 2019-07-08}
}

@misc{github-linux-syscallmd,
	title = {GitHub source for linux-syscallmd},
	howpublished = {\url{https://github.com/shdnx/linux-syscallmd}},
	note = {Accessed 2019-07-09}
}

@inproceedings {dune-paper,
	author = {Adam Belay and Andrea Bittau and Ali Mashtizadeh and David Terei and David Mazi{\`e}res and Christos Kozyrakis},
	title = {Dune: Safe User-level Access to Privileged {CPU} Features},
	booktitle = {Presented as part of the 10th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 12)},
	year = {2012},
	isbn = {978-1-931971-96-6},
	address = {Hollywood, CA},
	pages = {335--348},
	url = {https://www.usenix.org/conference/osdi12/technical-sessions/presentation/belay},
	publisher = {{USENIX}},
}

@misc{dune-website,
	title = {Dune Project official website},
	howpublished = {\url{http://dune.scs.stanford.edu}},
	note = {Accessed 2019-07-31}
}

@misc{dune-github-ix,
	title = {Dune source code, forked by the ix-project},
	howpublished = {\url{https://github.com/ix-project/dune}},
	note = {Accessed 2019-07-31}
}

@misc{dune-github-original,
	title = {Dune source code, original repository},
	howpublished = {\url{https://github.com/project-dune/dune}},
	note = {Accessed 2019-07-31}
}

@misc{ccmake-website,
	title = {CCMake - a graphical user interface for CMake},
	howpublished = {\url{https://cmake.org/cmake/help/latest/manual/ccmake.1.html}},
	note = {Accessed 2019-09-10}
}

@article{unikernels-intro,
	title={Unikernels: Library operating systems for the cloud},
	author={Madhavapeddy, Anil and Mortier, Richard and Rotsos, Charalampos and Scott, David and Singh, Balraj and Gazagnaire, Thomas and Smith, Steven and Hand, Steven and Crowcroft, Jon},
	journal={Acm Sigplan Notices},
	volume={48},
	number={4},
	pages={461--472},
	year={2013},
	publisher={ACM}
}

@misc{unikernels-list,
	title = {Unikernels.org, list of projects},
	howpublished = {\url{http://unikernel.org/projects/}},
	note = {Accessed 2019-09-26}
}

@misc{docker-web,
	title = {Docker.com website},
	howpublished = {\url{https://www.docker.com}},
	note = {Accessed 2019-09-26}
}

@misc{rumpkernels-web,
	title = {Rumpkernels.com website},
	howpublished = {\url{http://rumpkernel.org}},
	note = {Accessed 2019-09-26}
}

@misc{rumpkernels-doc,
	title = {Rumpkernels documentation},
	howpublished = {\url{https://github.com/rumpkernel/wiki/wiki/Repo}},
	note = {Accessed 2019-09-26}
}

@inproceedings{cpp-vptr-safedispatch,
	title={SafeDispatch: Securing C++ Virtual Calls from Memory Corruption Attacks.},
	author={Jang, Dongseok and Tatlock, Zachary and Lerner, Sorin},
	booktitle={NDSS},
	year={2014}
}

@inproceedings{cpp-vptr-gawlik,
	title={Towards automated integrity protection of C++ virtual function tables in binary programs},
	author={Gawlik, Robert and Holz, Thorsten},
	booktitle={Proceedings of the 30th Annual Computer Security Applications Conference},
	pages={396--405},
	year={2014},
	organization={ACM}
}

@inproceedings{cpp-vptr-bounov,
	title={Protecting C++ Dynamic Dispatch Through VTable Interleaving.},
	author={Bounov, Dimitar and Kici, Rami G{\"o}khan and Lerner, Sorin},
	booktitle={NDSS},
	year={2016}
}

@inproceedings{dhurjati2006efficiently,
	title={Efficiently detecting all dangling pointer uses in production servers},
	author={Dhurjati, Dinakar and Adve, Vikram},
	booktitle={International Conference on Dependable Systems and Networks (DSN'06)},
	pages={269--280},
	year={2006},
	organization={IEEE}
}

@article{dhurjati2003memory,
	title={Memory safety without runtime checks or garbage collection},
	author={Dhurjati, Dinakar and Kowshik, Sumant and Adve, Vikram and Lattner, Chris},
	journal={ACM SIGPLAN Notices},
	volume={38},
	number={7},
	pages={69--80},
	year={2003},
	publisher={ACM}
}

@inproceedings{akritidis2010cling,
	title={Cling: A Memory Allocator to Mitigate Dangling Pointers.},
	author={Akritidis, Periklis},
	booktitle={USENIX Security Symposium},
	pages={177--192},
	year={2010}
}
