http://instrumentation-infra.readthedocs.io/en/master/usage.html

Clean:
$ ./setup.py clean --packages libdune-autoenter libdangless --targets spec2006

Build:
$ ./setup.py build --dangless-profile="release" --targets spec2006 --instances baseline dune-only dangless-malloc

Build for testing/debugging:
$ ./setup.py build --dangless-debug --targets spec2006 --instances dangless-malloc

Don't use --parallel=proc while Dune still needs hugepages, it won't end well!

Test run:
$ ./setup.py run spec2006 baseline dune-only dangless-malloc --test --benchmarks all_c all_cpp

Test run only with Dangless:
$ ./setup.py run spec2006 dangless-malloc --test --benchmarks all_c all_cpp

Test run for a particular few benchmarks only with Dangless:
$ ./setup.py run spec2006 dangless-malloc --test --benchmarks 462.libquantum

Reportable reference run:
$ ./setup.py run --parallel=proc --parallelmax=1 --iterations=3 spec2006 baseline dune-only dangless-malloc --benchmarks all_c all_cpp

Report on results:
$ ./setup.py report spec2006 results/* --baseline baseline

----------

Make huge pages available to the system:
$ sudo sysctl -w vm.nr_hugepages=512

Check huge page availability:
$ cat /proc/meminfo | grep Huge

----------

Test run on all:

$ rm -rf build && sources/scripts/spec2006_clear.sh && ./setup.py build --dangless-debug --targets spec2006 --instances dangless-malloc && ./setup.py run spec2006 dangless-malloc --test --benchmarks all_c all_cpp
